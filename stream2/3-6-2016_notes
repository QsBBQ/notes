# Learning outcomes
    Harvest Tweets
    Format a Tweet
    Access Tweet Attributes
    Harvest Tweet Attributes
    Frequency Analysis
    Prettify the Output

# Harvest tweets
    text—the text of the tweet itself
    created_at—the date of creation
    favorite_count, retweet_count—the number of favourites and retweets
    favourited , retweeted—boolean stating whether the authenticated user has favourited or retweeted this tweet
    lang—abbreviation for the language (e.g. “en” for english)
    id—the tweet identifier
    place, coordinates, geo—geo-location information if available
    user—the author’s full profile
    entities—list of entities like URLs, @-mentions, hashtags and symbols
    in_reply_to_user_id—user identifier if the tweet is a reply to a specific user
    in_reply_to_status_id—status identifier id the tweet is a reply to a specific status

# Visualizing With Matplotlib—Intro
    Create a basic  line plot
    Legends, Titles, and Labels
    Bar Charts and Histograms
    Pie Charts
    Using Pandas

# Pandas
    pip install pandas
    pip install pandas-datareader

    import pandas as pd
    import datetime
    from pandas_datareader import data

# Twitter API—Tweets Two—Intro
    Lexical Diversity
    Tweet Popularity
    User Information
    User Timeline Information

# Twitter Streams 1 — Intro
    Access & Store the Twitter Stream
    Read Back the Stored File Data and Chart It
    Read Back the Stored File Data and Chart It Some More

# Twitter Streams 2 —Intro
    Use  a Pandas DataFrame
    Create a Pie Chart With Twitter Data

# Introduction To MongoDB—Intro
    Installation of Mongodb
    Configuration of MongoDB
    Testing basic CRUD functionality

# WHAT IS MONGO DB?
    MongoDB is a document database.
    A record in MongoDB is treated as a document, which is a data structure made up of field and value pairs.
    MongoDB documents are similar to JSON objects.
    The values of fields may include other documents, arrays, and arrays of documents.
    #Structure
    -database
    -collection
    -document
    -field
    default directory
      mkdir -p /data/db

    # typical mongodb
          {
      	_id: ObjectID('4bd9e8e17cefd644108961bb'),
      	name:'Vivek',
      	class : '12th',
      	subjects: [ 'physics', 'chemistry', 'math', 'english', 'computer'],
      	address: {
      					house_no: '12B',
      					block: 'B',
      					sector: 12,
      					city : 'noida',
      					},
      	grade: [
      					{
      					exam: 'unit test 1',
      					score: '60%'
      					},
      					{
      					exam: 'unit test 2',
      					score: '70%'
      					}

      				]
      }

# sample
      db.myFirstMDB.insert({
        first: 'john',
        last: 'lennon',
        dob: '09/10/1940',
        gender: 'm',
        hair_colour: 'brown',
        occupation: 'beatle',
        nationality: 'english'
    });
    db.myFirstMDB.insert({
        first: 'kate',
        last: 'bush',
        dob: '30/07/1958',
        gender: 'f',
        hair_colour: 'brown',
        occupation: 'singer',
        nationality: 'english'
    });
    db.myFirstMDB.insert({
        first: 'eve',
        last: 'ryan',
        dob: '19/09/1992',
        gender: 'f',
        hair_colour: 'pink',
        occupation: 'developer',
        nationality: 'irish'
    });
    db.myFirstMDB.insert({
        first: 'martha',
        last: 'fenton',
        dob: '15/05/1974',
        gender: 'f',
        hair_colour: 'brown',
        occupation: 'manager',
        nationality: 'irish'
    });
    db.myFirstMDB.insert({
        first: 'Neil',
        last: 'Hanslem',
        dob: '14/07/1983',
        gender: 'm',
        hair_colour: 'blonde',
        occupation: 'actor',
        nationality: 'english'
    });
    db.myFirstMDB.insert({
        first: 'Rocky',
        last: 'Persolm',
        dob: '19/12/1994',
        gender: 'f',
        hair_colour: 'black',
        occupation: 'activist',
        nationality: 'american'
    });

    db.myFirstMDB.find()
    db.myFirstMDB.find({gender: 'f'});
    db.myFirstMDB.find({gender: 'f', $or: [{nationality: 'english'}]});
    db.myFirstMDB.find({gender: 'f', $or: [{nationality: 'american'}, {nationality: 'irish'}]});
    db.myFirstMDB.find().sort({nationality: 1})
    db.myFirstMDB.find({gender: 'f', $or: [{nationality: 'irish'}, {nationality: 'english'}]}).limit(3);
    -update
    db.myFirstMDB.update({nationality: 'irish'}, {$set: {hair_colour: 'blue'}});
    db.myFirstMDB.update({nationality: 'irish'}, {$set: {hair_colour:'blue'}},{multi:true});
    -Deleting
      db.myFirstMDB.remove({first: 'kate', last: 'bush'});
      Delete all records
      db.myFirstMDB.remove({});
    gui
    http://www.litixsoft.de/english/download/

    https://docs.mongodb.org/manual/tutorial/query-documents/
https://docs.mongodb.org/manual/tutorial/insert-documents/
https://docs.mongodb.org/manual/tutorial/modify-documents/
https://docs.mongodb.org/manual/tutorial/remove-documents/
